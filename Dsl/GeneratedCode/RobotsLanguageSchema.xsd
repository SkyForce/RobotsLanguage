<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="RobotsLanguageSchema" targetNamespace="http://schemas.microsoft.com/dsltools/RobotsLanguage" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/RobotsLanguage" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- RobotModel -->
  <xsd:element name="robotModel" type="RobotModel" substitutionGroup="compound" />
  <xsd:complexType name="RobotModel">
    <xsd:annotation>
      <xsd:documentation>The root in which all other elements are embedded. Appears as a diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Compound">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- RobotModel Moniker -->
  <xsd:element name="robotModelMoniker" type="RobotModelMoniker" substitutionGroup="compoundMoniker" />
  <xsd:complexType name="RobotModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for RobotModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CompoundMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- AbstractNode -->
  <xsd:element name="abstractNode" abstract="true" type="AbstractNode" substitutionGroup="core:modelElement" />
  <xsd:complexType name="AbstractNode" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>Elements embedded in the model. Appear as boxes on the diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: AbstractNodeReferencesTargetAbstractNode -->
          <xsd:element name="targetAbstractNode" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of AbstractNodeReferencesTargetAbstractNode</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="abstractNodeReferencesTargetAbstractNode" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of AbstractNodeReferencesTargetAbstractNode needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ElemName -->
        <xsd:attribute name="elemName" type="xsd:string" use="required" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- AbstractNode Moniker -->
  <xsd:element name="abstractNodeMoniker" abstract="true" type="AbstractNodeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="AbstractNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for AbstractNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="elemName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- StartNode -->
  <xsd:element name="startNode" type="StartNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="StartNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- StartNode Moniker -->
  <xsd:element name="startNodeMoniker" type="StartNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="StartNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for StartNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- FinishNode -->
  <xsd:element name="finishNode" type="FinishNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="FinishNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- FinishNode Moniker -->
  <xsd:element name="finishNodeMoniker" type="FinishNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="FinishNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for FinishNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Compound -->
  <xsd:element name="compound" abstract="true" type="Compound" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Compound" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: CompoundHasAbstractNode -->
          <xsd:element name="abstractNode" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of CompoundHasAbstractNode</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="compoundHasAbstractNode" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of CompoundHasAbstractNode needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: CompoundHasSubprogramNode -->
          <xsd:element name="subprogramNode" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of CompoundHasSubprogramNode</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="compoundHasSubprogramNode" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of CompoundHasSubprogramNode needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Compound Moniker -->
  <xsd:element name="compoundMoniker" abstract="true" type="CompoundMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CompoundMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Compound instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SubprogramNode -->
  <xsd:element name="subprogramNode" type="SubprogramNode" substitutionGroup="compound" />
  <xsd:complexType name="SubprogramNode">
    <xsd:complexContent>
      <xsd:extension base="Compound">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ElemName -->
        <xsd:attribute name="elemName" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SubprogramNode Moniker -->
  <xsd:element name="subprogramNodeMoniker" type="SubprogramNodeMoniker" substitutionGroup="compoundMoniker" />
  <xsd:complexType name="SubprogramNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for SubprogramNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CompoundMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- IfNode -->
  <xsd:element name="ifNode" type="IfNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="IfNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: condition -->
        <xsd:attribute name="condition" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- IfNode Moniker -->
  <xsd:element name="ifNodeMoniker" type="IfNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="IfNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for IfNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EndIfNode -->
  <xsd:element name="endIfNode" type="EndIfNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="EndIfNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EndIfNode Moniker -->
  <xsd:element name="endIfNodeMoniker" type="EndIfNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="EndIfNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EndIfNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- IterationsNode -->
  <xsd:element name="iterationsNode" type="IterationsNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="IterationsNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: number -->
        <xsd:attribute name="number" type="xsd:integer" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- IterationsNode Moniker -->
  <xsd:element name="iterationsNodeMoniker" type="IterationsNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="IterationsNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for IterationsNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SubprogramCallNode -->
  <xsd:element name="subprogramCallNode" type="SubprogramCallNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="SubprogramCallNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Subprogram -->
        <xsd:attribute name="subprogram" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SubprogramCallNode Moniker -->
  <xsd:element name="subprogramCallNodeMoniker" type="SubprogramCallNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="SubprogramCallNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for SubprogramCallNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ParallelNode -->
  <xsd:element name="parallelNode" type="ParallelNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="ParallelNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ParallelNode Moniker -->
  <xsd:element name="parallelNodeMoniker" type="ParallelNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="ParallelNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ParallelNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EndParallelNode -->
  <xsd:element name="endParallelNode" type="EndParallelNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="EndParallelNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EndParallelNode Moniker -->
  <xsd:element name="endParallelNodeMoniker" type="EndParallelNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="EndParallelNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EndParallelNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- BreakNode -->
  <xsd:element name="breakNode" type="BreakNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="BreakNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- BreakNode Moniker -->
  <xsd:element name="breakNodeMoniker" type="BreakNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="BreakNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for BreakNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SwitchNode -->
  <xsd:element name="switchNode" type="SwitchNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="SwitchNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Condition -->
        <xsd:attribute name="condition" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- SwitchNode Moniker -->
  <xsd:element name="switchNodeMoniker" type="SwitchNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="SwitchNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for SwitchNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EndSwitchNode -->
  <xsd:element name="endSwitchNode" type="EndSwitchNode" substitutionGroup="abstractNode" />
  <xsd:complexType name="EndSwitchNode">
    <xsd:complexContent>
      <xsd:extension base="AbstractNode">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EndSwitchNode Moniker -->
  <xsd:element name="endSwitchNodeMoniker" type="EndSwitchNodeMoniker" substitutionGroup="abstractNodeMoniker" />
  <xsd:complexType name="EndSwitchNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EndSwitchNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractNodeMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- AbstractNodeReferencesTargetAbstractNode -->
  <xsd:element name="abstractNodeReferencesTargetAbstractNode" type="AbstractNodeReferencesTargetAbstractNode" substitutionGroup="core:modelElement" />
  <xsd:complexType name="AbstractNodeReferencesTargetAbstractNode">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end AbstractNode -->
          <xsd:element ref="abstractNodeMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Condition -->
        <xsd:attribute name="condition" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- AbstractNodeReferencesTargetAbstractNode Moniker -->
  <xsd:element name="abstractNodeReferencesTargetAbstractNodeMoniker" type="AbstractNodeReferencesTargetAbstractNodeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="AbstractNodeReferencesTargetAbstractNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for AbstractNodeReferencesTargetAbstractNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CompoundHasAbstractNode -->
  <xsd:element name="compoundHasAbstractNode" type="CompoundHasAbstractNode" substitutionGroup="core:modelElement" />
  <xsd:complexType name="CompoundHasAbstractNode">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end AbstractNode -->
          <xsd:element ref="abstractNode" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CompoundHasAbstractNode Moniker -->
  <xsd:element name="compoundHasAbstractNodeMoniker" type="CompoundHasAbstractNodeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CompoundHasAbstractNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for CompoundHasAbstractNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CompoundHasSubprogramNode -->
  <xsd:element name="compoundHasSubprogramNode" type="CompoundHasSubprogramNode" substitutionGroup="core:modelElement" />
  <xsd:complexType name="CompoundHasSubprogramNode">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end SubprogramNode -->
          <xsd:element ref="subprogramNode" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CompoundHasSubprogramNode Moniker -->
  <xsd:element name="compoundHasSubprogramNodeMoniker" type="CompoundHasSubprogramNodeMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CompoundHasSubprogramNodeMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for CompoundHasSubprogramNode instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
</xsd:schema>

